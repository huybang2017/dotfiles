#!/bin/bash

echo "Performing setup..."

package_pacman_installed() {
  pacman -Q "$1" &>/dev/null
}

install_pacman_package() {
  if ! package_pacman_installed "$1"; then
    sudo pacman -S --noconfirm "$1" || exit 1
  fi
}

install_rustup() {
  if ! package_installed rustup; then
    sudo pacman -S --noconfirm rustup || exit 1
  fi
  if ! rustup --version &>/dev/null; then
    rustup default stable || exit 1
  fi
}

install_paru() {
  if ! package_installed paru; then
    git clone https://aur.archlinux.org/paru.git || exit 1
    cd paru || exit 1
    makepkg -si --noconfirm || exit 1
  fi
}

aur_package_installed() {
  paru -Q "$1" &>/dev/null
}

install_aur_package() {
  if ! aur_package_installed "$1"; then
    paru -S --noconfirm "$1" || exit 1
  fi
}

pacman_packages=(
  "neovim"
  "ttf-jetbrains-mono"
  "ttf-noto-nerd"
  "fish"
  "i3"
  "i3blocks"
  "kitty"
  "lazygit"
  "picom"
  "rofi"
  "tmux"
  "ripgrep"
  "fd"
  "feh"
  "firefox"
  "xrandr"
)

aur_packages=(
  codelldb-bin
  ibus-bamboo
)

install_tpm() {
  if [ ! -e "$HOME/.config/tmux/plugins/tmux" ]; then
    git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
    ~/.tmux/plugins/tpm/scripts/install_plugins.sh
  fi
}

for package in "${pacman_packages[@]}"; do
  install_pacman_package "$package"
done

install_paru
for aur_pkg in "${aur_packages[@]}"; do
  install_aur_package "$aur_pkg"
done

install_rustup
install_tpm

echo "Setup complete."
